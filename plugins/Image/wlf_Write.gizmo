#! C:/Program Files/Nuke10.0v4/nuke-10.0.4.dll -nx
version 10.0 v4
Gizmo {
 tile_color 0xbfbf00ff
 label "\[value this.Write_MOV_1.file]\n\[value this.Write_JPG_1.file]"
 note_font 微软雅黑
 addUserKnob {20 Write l "Write v1.50.1"}
 addUserKnob {6 use_custom_frame l 指定帧 +STARTLINE}
 addUserKnob {3 custom_frame l "" -STARTLINE}
 custom_frame 1
 addUserKnob {3 frame l INVISIBLE +INVISIBLE}
 frame {{"\[python -execlocal first,\\ last\\ =\\ nuke.numvalue('root.first_frame'),\\ nuke.numvalue('root.last_frame')\\nmiddle\\ =\\ (first\\ +\\ last)//2\\nthisNode\\ =\\ nuke.thisNode()\\nif\\ thisNode\\\['use_custom_frame'\\].value()\\ :\\n\\ \\ \\ \\ ret\\ =\\ thisNode\\\['custom_frame'\\].value()\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ middle]"}}
 addUserKnob {32 bt_first l 首帧 -STARTLINE T "set first_frame \[value root.first_frame] \nknob use_custom_frame 1\nknob custom_frame \$first_frame\nframe \$first_frame"}
 addUserKnob {32 bt_middle l 中间帧(默认) -STARTLINE T "knob this.use_custom_frame 0\nframe \[value this.knob.frame]"}
 addUserKnob {32 bt_last l 末帧 -STARTLINE T "set last_frame \[value root.last_frame] \nknob use_custom_frame 1\nknob custom_frame \$last_frame\nframe \$last_frame"}
 addUserKnob {32 bt_this l 当前帧 -STARTLINE T "knob use_custom_frame 1\nknob custom_frame \[x]"}
 addUserKnob {6 no_motionblur l 单帧渲染时不带运动模糊 +STARTLINE}
 no_motionblur true
 addUserKnob {26 ""}
 addUserKnob {32 bt_render_JPG l 渲染单帧 T "knob this.reading none\nknob this.Write_JPG_1.disable 0\nexecute this.Write_JPG_1 \[value this.knob.frame]\nknob this.Read_JPG_1.version \[expr \[value this.Read_JPG_1.version]+1]\nknob this.reading jpg" +STARTLINE}
 addUserKnob {22 bt_jpg_dir l 单帧输出文件夹 -STARTLINE T "path = os.path.join(nuke.value('root.project_directory'), 'images')\nif os.path.isdir(path):\n    nukescripts.start('file://'+path)\nelse:\n    nuke.message('输出路径不存在, 请先尝试渲染')"}
 addUserKnob {22 bt_render l 渲染MOV T "nukescripts.showRenderDialog(\[nuke.thisNode()], False)" +STARTLINE}
 addUserKnob {22 bt_mov_dir l 视频输出文件夹 -STARTLINE T "path = os.path.join(nuke.value('root.project_directory'), 'mov')\nif os.path.isdir(path):\n    nukescripts.start('file://'+path)\nelse:\n    nuke.message('输出路径不存在, 请先尝试渲染')"}
 addUserKnob {26 ""}
 addUserKnob {83 reading l 读取 M {none mov jpg}}
 addUserKnob {22 reload -STARTLINE T "for n in nuke.thisNode().nodes():\n    if n.Class() == 'Read':\n        n\['reload'].execute()"}
}
 Read {
  inputs 0
  file "\[value Write_JPG_1.file]"
  proxy "\[value Write_JPG_1.proxy]"
  origset true
  on_error checkerboard
  name Read_JPG_1
  gl_color 0xe1ff3200
  note_font 微软雅黑
  selected true
  xpos 90
  ypos -182
  disable {{"! \[file exist \[value this.file]]"}}
 }
 Read {
  inputs 0
  file "\[value Write_MOV_2.file]"
  proxy "\[value Write_MOV_2.proxy]"
  origset true
  on_error checkerboard
  name Read_MOV_2
  gl_color 0xe1ff3200
  note_font 微软雅黑
  xpos 90
  ypos -301
  disable {{"! \[file exist \[value this.file]]"}}
 }
 Constant {
  inputs 0
  channels rgb
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  name Constant1
  gl_color 0xffdd3200
  note_font 微软雅黑
  xpos 90
  ypos -768
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  opacity 0.3
  message "\[lindex \[split \[basename \[value root.name]] .] 0]"
  old_expression_markers {{0 -1}
    }
  box {20 20 1000 75}
  transforms {{0 2}
    }
  cursor_position 50
  font {{ Microsoft YaHei : Regular : msyh.ttf : 0 }}
  global_font_scale 0.65
  scale {1 1}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{24 122.5}
    }
  group_animations {{0} imported: 0 selected: items: "root transform"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  enable_background {{!root.proxy}}
  background_opacity 0.3
  background_border_x 20
  name Text2_Write_2
  gl_color 0x3235ff00
  label "镜头名称\n\[knob this.message \{\[lindex \[split \[basename \[value root.name]] .] 0]\}]"
  xpos 90
  ypos -688
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  opacity 0.34
  message "\[x]"
  old_message {{49}
    }
  old_expression_markers {{0 0}
    }
  box {1700 20 1900 75}
  xjustify right
  transforms {{0 2}
    }
  cursor_position 3
  font {{ Microsoft YaHei : Regular : msyh.ttf : 0 }}
  global_font_scale 0.65
  scale {1 1}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{1778.5 128.5}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  enable_background {{!root.proxy}}
  background_opacity 0.3
  background_border_x 20
  name Text2_Write_1
  gl_color 0x5bff3200
  label "帧编号\n\[knob this.message \{\[x]\}]"
  xpos 90
  ypos -646
 }
 Text2 {
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  opacity 0.34
  box {1098 1000.5 1900 1055.5}
  xjustify right
  transforms {{0 2}
    }
  font {{ Microsoft YaHei : Regular : msyh.ttf : 0 }}
  global_font_scale 0.5
  scale {1 1}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{1778.5 128.5}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  enable_background {{!root.proxy}}
  background_opacity 0.3
  background_border_x 20
  name Text2_Write_3
  gl_color 0xff32f700
  label 制作人
  xpos 90
  ypos -604
 }
 Assert {
  expression {{"\[string equal \[knob Text2_Write_3.message \[value root.wlf_artist \"\"]] \"\"]"}}
  name Assert2
  gl_color 0xf3ff3200
  label 实时设置Text2_Write_3的信息
  note_font 微软雅黑
  xpos 90
  ypos -562
 }
 Reformat {
  resize fit
  name Reformat1
  gl_color 0x32ffc400
  note_font 微软雅黑
  xpos 90
  ypos -514
 }
 Input {
  inputs 0
  name Input
  gl_color 0x4dff3200
  xpos 0
  ypos -968
 }
 Reformat {
  resize fit
  name Reformat2
  gl_color 0x32ffc400
  note_font 微软雅黑
  xpos 0
  ypos -938
 }
 Write {
  file "mov/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  proxy "mov/proxy/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  colorspace sRGB
  file_type mov
  meta_codec apch
  mov32_codec "rle "
  mov32_pixel_format {{0} "default (RGBA  8-bit)" "RGBA  8-bit"}
  mov64_codec apch
  mov64_fps {{root.fps}}
  mov64_advanced 1
  mov64_bitrate 20000
  mov64_bitrate_tolerance 40000000
  mov64_quality_min 2
  mov64_quality_max 31
  mov64_gop_size 12
  mov64_b_frames 0
  checkHashOnRead false
  version 18
  in_colorspace linear
  out_colorspace linear
  beforeRender "# Create output folder;\n_dir = os.path.abspath('\{\}/../'.format(nuke.filename(nuke.thisNode())));\n\nif not os.path.exists(_dir):\n    os.makedirs(_dir);"
  name Write_MOV_1
  gl_color 0xbc32ff00
  xpos 0
  ypos -906
  addUserKnob {20 caravr l CaraVR}
  addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
  addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
 }
 Write {
  file "images/\[lindex \[split \[basename \[value root.name]] .] 0].jpg"
  proxy "images/\[lindex \[split \[basename \[value root.name]] .] 0].jpg"
  file_type jpeg
  _jpeg_quality 1
  render_order 2
  first {{parent.knob.frame}}
  last {{first}}
  use_limit true
  checkHashOnRead false
  in_colorspace linear
  out_colorspace linear
  beforeRender "# Data storage;\nclass __wlf_Write(object):\n    blur_node_classes = (\n        'VectorBlur',\n        'VectorBlur2',\n        'CameraShake',\n        'MotionBlur',\n        'OFXcom.revisionfx.rsmb_v3',\n        'OFXcom.genarts.sapphire.blursharpen.s_blurdirectional_v1' \n    )\n    last_render_mode = False\n    blur_nodes = \[]\n\n    def __init__(self):\n        cls = globals()\['__wlf_Write']\n        cls.last_render_mode = nuke.Root()\['proxy'].value()\n        cls.blur_nodes = \[n for n in nuke.allNodes(group=nuke.Root()) \\\n            if n.Class() in self.blur_node_classes and not n\['disable'].value()]\n\n__wlf_Write()\n\n# Create output folder\n_dir = os.path.abspath('\{\}/../'.format(nuke.filename(nuke.thisNode())))\nif not os.path.exists(_dir):\n    os.makedirs(_dir)\n\nnuke.knob('root.proxy', 'False')\nif nuke.numvalue('parent.no_motionblur'):\n    map(lambda n: n\['disable'].setValue(True), __wlf_Write.blur_nodes)\n"
  afterRender "nuke.knob('root.proxy', str(__wlf_Write.last_render_mode))\nif nuke.numvalue('parent.no_motionblur'):\n    map(lambda n: n\['disable'].setValue(False), __wlf_Write.blur_nodes)\nnuke.knob('this.disable', 'True')"
  name Write_JPG_1
  gl_color 0xbf32ff00
  label "单帧\n会在退出脚本时自动输出"
  xpos 0
  ypos -850
  disable true
  addUserKnob {20 caravr l CaraVR}
  addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
  addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
 }
 Merge2 {
  inputs 2
  name Merge1
  gl_color 0x324dff00
  label burn-in
  note_font 微软雅黑
  xpos 0
  ypos -482
 }
 Write {
  file "mov/burn-in/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  proxy "mov/proxy/burn-in/\[lindex \[split \[basename \[value root.name]] .] 0].mov"
  colorspace sRGB
  file_type mov
  meta_codec apch
  mov32_codec "rle "
  mov32_pixel_format {{0} "default (RGBA  8-bit)" "RGBA  8-bit"}
  mov64_codec apch
  mov64_fps {{root.fps}}
  mov64_advanced 1
  mov64_bitrate 20000
  mov64_bitrate_tolerance 40000000
  mov64_quality_min 2
  mov64_quality_max 31
  mov64_gop_size 12 
  mov64_b_frames 0
  render_order 2
  checkHashOnRead false
  in_colorspace linear
  out_colorspace linear
  beforeRender "# Create output folder;\n_dir = os.path.abspath('\{\}/../'.format(nuke.filename(nuke.thisNode())));\n\nif not os.path.exists(_dir):\n    os.makedirs(_dir);"
  name Write_MOV_2
  gl_color 0x32ff4100
  label 带帧编号的MOV
  xpos 0
  ypos -434
  addUserKnob {20 caravr l CaraVR}
  addUserKnob {4 viewPresets l "View Presets" M {main stereo cams all}}
  addUserKnob {22 set l Set -STARTLINE T "w = nuke.thisNode()\nscriptViews = nuke.views()\nviewPreset = w\['viewPresets'].getValue()\nselectedViews = None\nif viewPreset == 0:\n  selectedViews = \['main']\nif viewPreset == 1:\n  stereoViews = \['left', 'right']\n  if set(stereoViews).issubset(set(scriptViews)):\n    selectedViews = stereoViews\n  else:\n    selectedViews = None\nelif viewPreset == 2:\n  selectedViews = \[v for v in scriptViews if 'cam' in v.lower()]\nelif viewPreset == 3:\n  selectedViews = scriptViews\nif selectedViews:\n  w\['views'].fromScript(' '.join(selectedViews))\n"}
 }
 Assert {
  expression {{"\[file exists \[value root.project_directory]]"}}
  message "工程目录不存在: \"\[value root.project_directory]\""
  name Assert3
  gl_color 0x32ff5400
  note_font 微软雅黑
  xpos 0
  ypos -366
 }
 Assert {
  expression {{"\[python bool(nuke.value('root.name'))]"}}
  message 工程未命名
  name Assert1
  gl_color 0x32ff5400
  note_font 微软雅黑
  xpos 0
  ypos -334
 }
 Switch {
  inputs 3
  which {{parent.reading}}
  name Switch2
  gl_color 0x3332ff00
  note_font 微软雅黑
  xpos 0
  ypos -62
 }
 Output {
  name Output1
  gl_color 0x56ff3200
  xpos 0
  ypos -30
 }
end_group
