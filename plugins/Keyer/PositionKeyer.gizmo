#! C:/Program Files/Nuke10.0v4/nuke-10.0.4.dll -nx
version 10.0 v4
add_layer {P P.red P.green P.blue}
Gizmo {
 tile_color 0xff00ff
 label "输入通道: \[value in]"
 note_font 微软雅黑
 addUserKnob {20 positionkeyer l "PositionKeyer v1.2.4"}
 addUserKnob {41 in l "Position Layer" T Shuffle2.in}
 addUserKnob {26 div_sampler l <b>取样器</b>}
 addUserKnob {22 bt_sampler_switch l Enable(启用) t "启用控制器, 快速设置白点和黑点。" T "try:\n    __positionkeyer_sample\nexcept NameError:\n    def __positionkeyer_sample():\n        if not nuke.thisNode().input(0):\n            return\n        p0 = nuke.thisNode()\['p0'].value()\n        p1 = nuke.thisNode()\['p1'].value()\n\n        sampler = nuke.thisNode().node('Sampler')\n\n        blackpoint = (sampler.sample('rgba.red', p0\[0],  p0\[1]), sampler.sample('rgba.green', p0\[0],  p0\[1]), sampler.sample('rgba.blue', p0\[0],  p0\[1]))\n        whitepoint = (sampler.sample('rgba.red', p1\[0],  p1\[1]), sampler.sample('rgba.green', p1\[0],  p1\[1]), sampler.sample('rgba.blue', p1\[0],  p1\[1]))\n\n        sampler\['p0'].setValue(blackpoint)\n        sampler\['p1'].setValue(whitepoint)\n\ntry:\n    __positionkeyer_disable\nexcept NameError:\n    def __positionkeyer_disable():\n        for n in __positionkeyer_disable_set:\n            try:\n                n\['bt_reset_sampler_switch'].execute()\n            except ValueError:\n                pass\n            nuke.Root().setModified(True)\n        __positionkeyer_disable_set.clear()\n\n    nuke.callbacks.addOnScriptSave(__positionkeyer_disable)\n    __positionkeyer_disable_set = set()\n        \nif nuke.thisKnob().label() == 'Enable(启用)':\n    nuke.callbacks.addKnobChanged(__positionkeyer_sample, node=nuke.thisNode())\n    __positionkeyer_disable_set.add(nuke.thisNode())\n\n    nuke.thisKnob().setLabel('Disable(禁用)')\n    nuke.thisKnob().setTooltip('禁用控制器, 防止设置被意外改动。')\n    nuke.thisNode()\['p0'].setVisible(True)\n    nuke.thisNode()\['p1'].setVisible(True)\nelse:\n    nuke.callbacks.removeKnobChanged(__positionkeyer_sample, node=nuke.thisNode())\n\n    nuke.thisNode()\['bt_reset_sampler_switch'].execute()\n" +STARTLINE}
 addUserKnob {22 bt_reset_sampler_switch l INVISIBLE +INVISIBLE T "nuke.thisNode()\['bt_sampler_switch'].setLabel('Enable(启用)')\nnuke.thisNode()\['bt_sampler_switch'].setTooltip('启用控制器, 快速设置白点和黑点。')\nnuke.thisNode()\['p0'].setVisible(False)\nnuke.thisNode()\['p1'].setVisible(False)" +STARTLINE}
 addUserKnob {12 p0 +HIDDEN}
 p0 {100 300}
 addUserKnob {12 p1 +HIDDEN}
 p1 {300 100}
 addUserKnob {26 div_settings l <b>设置</b>}
 addUserKnob {41 blackpoint l blackpoint(黑点) t 低于此值将为黑色 T Sampler.p0}
 addUserKnob {41 whitepoint l whitepoint(白点) t 高于此值将为白色 T Sampler.p1}
 addUserKnob {7 rotation_x l "rotation x(旋转x轴)" R 0 180}
 addUserKnob {7 rotation l "rotation y(旋转y轴)" R 0 180}
 rotation 90
 addUserKnob {7 rotation_z l "rotation z(旋转z轴)" R 0 180}
 addUserKnob {26 t_alpha_output l output}
 addUserKnob {6 x +STARTLINE}
 x true
 addUserKnob {6 invert_x l invert(反转) -STARTLINE}
 addUserKnob {6 y +STARTLINE}
 addUserKnob {6 invert_y l invert(反转) -STARTLINE}
 addUserKnob {41 output l channel T Keyer1.output}
 addUserKnob {41 combine l "" t "决定如何和已有输出通道数据合并:\nreplace:\t替换\nintersect:\t交集\nunion:\t并集" -STARTLINE T Keyer1.combine}
 addUserKnob {20 g_presets l presets(预设) n 1}
 addUserKnob {22 bt_rotation_0 l 0 -STARTLINE T "nuke.thisNode()\['x'].setValue(True)\nnuke.thisNode()\['y'].setValue(False)\nnuke.thisNode()\['rotation'].setValue(0)"}
 addUserKnob {22 bt_rotation_90 l 90 -STARTLINE T "nuke.thisNode()\['x'].setValue(True)\nnuke.thisNode()\['y'].setValue(False)\nnuke.thisNode()\['rotation'].setValue(90)"}
 addUserKnob {22 bt_y l Y -STARTLINE T "nuke.thisNode()\['x'].setValue(False)\nnuke.thisNode()\['y'].setValue(True)"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {6 __initiated l INVISIBLE +INVISIBLE +STARTLINE}
 __initiated false
}
 Input {
  inputs 0
  name Input
  gl_color 0x327fff00
  xpos 180
  ypos -1378
 }
 Assert {
  expression {{"\[python -execlocal ret\\ =\\ 1\\nif\\ not\\ nuke.executing():\\n\\ \\ \\ \\ n\\ =\\ nuke.thisParent()\\n\\ \\ \\ \\ if\\ not\\ n\\\['__initiated'\\].value():\\n\\ \\ \\ \\ \\ \\ \\ \\ n\\\['bt_reset_sampler_switch'\\].execute()\\n\\ \\ \\ \\ \\ \\ \\ \\ n\\\['bt_sampler_switch'\\].execute()\\n\\ \\ \\ \\ \\ \\ \\ \\ n\\\['__initiated'\\].setValue(True)]"}}
  message "\[knob expression] is not true"
  name Assert1
  gl_color 0x32ff9e00
  label __init__
  note_font 微软雅黑
  xpos 180
  ypos -1352
 }
set Nb6044800 [stack 0]
 Shuffle {
  in P
  name Shuffle2
  gl_color 0x3282ff00
  xpos 180
  ypos -1308
 }
 NoOp {
  name Sampler
  gl_color 0x32ffc700
  label 取样器
  note_font 微软雅黑
  xpos 180
  ypos -1270
  addUserKnob {20 Result}
  addUserKnob {18 p0 l "point 0"}
  p0 {0 0 0}
  addUserKnob {6 p0_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 p1 l "point 1"}
  p1 {0 0 0}
  addUserKnob {6 p1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 BlinkScript {
  recompileCount 49
  ProgramGroup 1
  KernelDescription "2 \"PositionKeyer\" iterate pixelWise 4af6a713d32fc6af25190de8f366a875475227e91938ddfa9965b741de48120a 2 \"position\" Read Point \"dst\" Write Point 7 \"invert_x\" Bool 1 AA== \"invert_y\" Bool 1 AA== \"enable_x\" Bool 1 AA== \"enable_y\" Bool 1 AA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"p0_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"p1_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== 7 \"invert_x\" 1 1 \"invert_y\" 1 1 \"enable_x\" 1 1 \"enable_y\" 1 1 \"rotate\" 3 1 \"p0_color\" 4 1 \"p1_color\" 4 1 2 \"p0\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"p1\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "// PositionKeyerKernel\n// VERSION: 0.4.2\nkernel PositionKeyer : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> position;\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n  bool invert_x;\n  bool invert_y;\n  bool enable_x;\n  bool enable_y;\n  float3 rotate;\n  float4 p0_color;\n  float4 p1_color;\n\nlocal:\n  float4 p0;\n  float4 p1;\n\n  float4 rotate3(float4 point, float3 rotate)\n  \{\n    float sx = sin(rotate.x);\n    float cx = cos(rotate.x);\n    float sy = sin(rotate.y);\n    float cy = cos(rotate.y);\n    float sz = sin(rotate.z);\n    float cz = cos(rotate.z);\n    float xy, xz, yx, yz, zx, zy;\n    xy = cx * point.y - sx * point.z;\n    xz = sx * point.y + cx * point.z;\n    yx = cy * point.x - sy * xz;\n    yz = sy * point.x + cy * xz;\n    zx = cz * yx - sz * xy;\n    zy = sz * yx + cz * xy;\n    point.x = zx;\n    point.y = zy;\n    point.z = yz;\n    return point;\n  \}\n\n  float linear(float x, float p0, float p1)\n  \{\n    return (x - p0) / (p1 - p0);\n  \}\n\n  void init()\n  \{\n    p0 = rotate3(p0_color, rotate);\n    p1 = rotate3(p1_color, rotate);\n  \}\n\n  void process()\n  \{\n    float4 pos = rotate3(position(), rotate);\n\n    float4 result;\n    result\[0] = linear(pos\[0], p0\[0], p1\[0]);\n    result\[1] = linear(pos\[1], p0\[1], p1\[1]);\n    result\[2] = linear(pos\[2], p0\[2], p1\[2]);\n    result = clamp(result, float4(0.0f), float4(1.0f));\n\n    result\[0] = invert_x ? (1 - result\[0]) : result\[0];\n    result\[1] = invert_y ? (1 - result\[1]) : result\[1];\n    result\[3] = (enable_x ? result\[0] : 1) * (enable_y ? result\[1] : 1);\n\n    dst() = result;\n  \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  PositionKeyer_invert_x {{parent.invert_x}}
  PositionKeyer_invert_y {{parent.invert_y}}
  PositionKeyer_enable_x {{parent.x}}
  PositionKeyer_enable_y {{parent.y}}
  PositionKeyer_rotate {{radians(parent.knob.rotation_x)} {"radians(parent.knob.rotation - 90)"} {radians(parent.knob.rotation_z)}}
  PositionKeyer_p0_color {{parent.Sampler.p0} {parent.Sampler.p0} {parent.Sampler.p0} {parent.Sampler.p0}}
  PositionKeyer_p1_color {{parent.Sampler.p1} {parent.Sampler.p1} {parent.Sampler.p1} {parent.Sampler.p1}}
  protectKernelWhenPublishing true
  rebuild_finalise ""
  name BlinkScript1
  gl_color 0x3332ff00
  note_font 微软雅黑
  selected true
  xpos 180
  ypos -1218
 }
set Nb7283c00 [stack 0]
 Dot {
  name Dot2
  gl_color 0x7bff3200
  note_font 微软雅黑
  xpos 544
  ypos -1374
  hide_input true
 }
push $Nb6044800
push $Nb6044800
 Copy {
  inputs 2
  from0 {{{parent.Keyer1.output}}}
  to0 rgba.alpha
  name Copy2
  gl_color 0x32ff6c00
  note_font 微软雅黑
  xpos 290
  ypos -1308
 }
set Nb7283400 [stack 0]
 ChannelMerge {
  inputs 2
  name ChannelMerge2
  gl_color 0xe6ff3200
  note_font 微软雅黑
  xpos 510
  ypos -1329
 }
push $Nb7283c00
 Dot {
  name Dot1
  gl_color 0xd332ff00
  note_font 微软雅黑
  xpos 434
  ypos -1374
  hide_input true
 }
push $Nb7283400
 ChannelMerge {
  inputs 2
  operation in
  name ChannelMerge1
  gl_color 0xe6ff3200
  note_font 微软雅黑
  xpos 400
  ypos -1226
 }
push $Nb7283c00
 Switch {
  inputs 3
  which {{parent.combine}}
  name Switch1
  gl_color 0x324cff00
  note_font 微软雅黑
  xpos 510
  ypos -1210
 }
set N47ea3f80 [stack 0]
push $N47ea3f80
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 {{{parent.Keyer1.output}}}
  name Copy1
  gl_color 0xff523200
  note_font 微软雅黑
  xpos 510
  ypos -1182
 }
 Output {
  name Output1
  gl_color 0x32ff4100
  note_font 微软雅黑
  xpos 510
  ypos -1138
 }
push $Nb6044800
 Viewer {
  frame_range 1-100
  fps 25
  input_process false
  name Viewer1
  gl_color 0xf932ff00
  note_font 微软雅黑
  xpos 400
  ypos -1308
 }
 Keyer {
  inputs 0
  operation "luminance key"
  name Keyer1
  gl_color 0x32d2ff00
  note_font 微软雅黑
  xpos 70
  ypos -1395
 }
end_group
